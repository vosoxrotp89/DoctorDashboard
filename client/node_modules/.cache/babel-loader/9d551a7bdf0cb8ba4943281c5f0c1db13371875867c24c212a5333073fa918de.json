{"ast":null,"code":"var _jsxFileName = \"/workspaces/DoctorDashboard/client/src/components/doctor/AvailabilityCalendar.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { fetchDoctorUnavailableDates, addUnavailableDate, removeUnavailableDate } from '../../utils/api';\nimport { formatDate, isDateInPast, getFormattedDate } from '../../utils/dateUtils';\nimport LoadingSpinner from '../common/LoadingSpinner';\nimport AlertMessage from '../common/AlertMessage';\nimport { FaCalendarAlt, FaPlus, FaTimes, FaExclamationCircle } from 'react-icons/fa';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AvailabilityCalendar = () => {\n  _s();\n  const [unavailableDates, setUnavailableDates] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [isAddingDate, setIsAddingDate] = useState(false);\n  const [newDate, setNewDate] = useState(getFormattedDate());\n  const [newReason, setNewReason] = useState('');\n  const [actionSuccess, setActionSuccess] = useState(false);\n  const [actionMessage, setActionMessage] = useState('');\n  useEffect(() => {\n    const loadUnavailableDates = async () => {\n      try {\n        setLoading(true);\n        const data = await fetchDoctorUnavailableDates();\n        setUnavailableDates(data);\n        setError(null);\n      } catch (err) {\n        console.error('Error fetching unavailable dates:', err);\n        setError('Failed to load unavailable dates. Please try again later.');\n\n        // For demo purposes, set mock data if API fails\n        setUnavailableDates([{\n          _id: 'date1',\n          date: '2025-05-15',\n          reason: 'Personal leave'\n        }, {\n          _id: 'date2',\n          date: '2025-06-10',\n          reason: 'Conference attendance'\n        }, {\n          _id: 'date3',\n          date: '2025-06-11',\n          reason: 'Conference attendance'\n        }, {\n          _id: 'date4',\n          date: '2025-07-01',\n          reason: 'Vacation'\n        }, {\n          _id: 'date5',\n          date: '2025-07-02',\n          reason: 'Vacation'\n        }, {\n          _id: 'date6',\n          date: '2025-07-03',\n          reason: 'Vacation'\n        }]);\n      } finally {\n        setLoading(false);\n      }\n    };\n    loadUnavailableDates();\n  }, []);\n  const handleAddDate = async e => {\n    e.preventDefault();\n\n    // Validate date is not in the past\n    if (isDateInPast(newDate)) {\n      setError('Cannot add unavailable dates in the past.');\n      return;\n    }\n\n    // Check if date already exists\n    if (unavailableDates.some(item => item.date === newDate)) {\n      setError('This date is already marked as unavailable.');\n      return;\n    }\n    try {\n      setLoading(true);\n      // This would typically make an API call to add an unavailable date\n      // For demo purposes, we'll just update the local state\n      const dateId = 'date' + (unavailableDates.length + 1);\n      const newDateEntry = {\n        _id: dateId,\n        date: newDate,\n        reason: newReason\n      };\n      setUnavailableDates([...unavailableDates, newDateEntry]);\n      setNewDate(getFormattedDate());\n      setNewReason('');\n      setIsAddingDate(false);\n      setError(null);\n\n      // Show success message\n      setActionSuccess(true);\n      setActionMessage('Date marked as unavailable successfully!');\n\n      // Reset success message after 3 seconds\n      setTimeout(() => {\n        setActionSuccess(false);\n        setActionMessage('');\n      }, 3000);\n    } catch (err) {\n      console.error('Error adding unavailable date:', err);\n      setError('Failed to add unavailable date. Please try again later.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleRemoveDate = async dateId => {\n    try {\n      setLoading(true);\n      // This would typically make an API call to remove an unavailable date\n      // For demo purposes, we'll just update the local state\n      setUnavailableDates(unavailableDates.filter(item => item._id !== dateId));\n      setError(null);\n\n      // Show success message\n      setActionSuccess(true);\n      setActionMessage('Date removed successfully!');\n\n      // Reset success message after 3 seconds\n      setTimeout(() => {\n        setActionSuccess(false);\n        setActionMessage('');\n      }, 3000);\n    } catch (err) {\n      console.error('Error removing unavailable date:', err);\n      setError('Failed to remove unavailable date. Please try again later.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Group dates by month for better organization\n  const groupDatesByMonth = () => {\n    const grouped = {};\n    [...unavailableDates].sort((a, b) => new Date(a.date) - new Date(b.date)).forEach(item => {\n      const date = new Date(item.date);\n      const monthYear = date.toLocaleString('en-US', {\n        month: 'long',\n        year: 'numeric'\n      });\n      if (!grouped[monthYear]) {\n        grouped[monthYear] = [];\n      }\n      grouped[monthYear].push(item);\n    });\n    return grouped;\n  };\n  const groupedDates = groupDatesByMonth();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-white rounded-md shadow-sm\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-4 border-b border-gray-200\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-xl font-semibold text-primary\",\n        children: \"Availability Calendar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-sm text-gray-500 mt-1\",\n        children: \"Manage your unavailable dates\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(AlertMessage, {\n      type: \"error\",\n      message: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 17\n    }, this), actionSuccess && /*#__PURE__*/_jsxDEV(AlertMessage, {\n      type: \"success\",\n      message: actionMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center mb-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm text-gray-600\",\n          children: \"Mark dates when you are unavailable to accept appointments.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this), !isAddingDate ? /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setIsAddingDate(true),\n          className: \"flex items-center space-x-1 px-4 py-2 bg-primary text-white rounded-md hover:bg-opacity-90\",\n          children: [/*#__PURE__*/_jsxDEV(FaPlus, {\n            size: 12\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Add Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setIsAddingDate(false),\n          className: \"text-gray-600 hover:text-gray-800\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this), isAddingDate && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-6 p-4 bg-gray-50 rounded-md\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-md font-medium text-gray-700 mb-3\",\n          children: \"Add Unavailable Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleAddDate,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid grid-cols-1 md:grid-cols-2 gap-4 mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"space-y-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"newDate\",\n                className: \"block text-sm font-medium text-gray-700\",\n                children: \"Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"date\",\n                id: \"newDate\",\n                value: newDate,\n                min: getFormattedDate(),\n                onChange: e => setNewDate(e.target.value),\n                className: \"w-full p-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-primary\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"space-y-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"newReason\",\n                className: \"block text-sm font-medium text-gray-700\",\n                children: \"Reason\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"newReason\",\n                value: newReason,\n                onChange: e => setNewReason(e.target.value),\n                placeholder: \"e.g. Vacation, Conference, etc.\",\n                className: \"w-full p-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-primary\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-end\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"px-4 py-2 bg-primary text-white rounded-md hover:bg-opacity-90\",\n              disabled: loading,\n              children: \"Add Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 11\n      }, this), loading && unavailableDates.length === 0 ? /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 11\n      }, this) : unavailableDates.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center py-10\",\n        children: [/*#__PURE__*/_jsxDEV(FaCalendarAlt, {\n          className: \"mx-auto text-gray-300 text-5xl mb-4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-500\",\n          children: \"You haven't marked any unavailable dates yet.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-500\",\n          children: \"Click the \\\"Add Date\\\" button to get started.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-6\",\n        children: Object.entries(groupedDates).map(([monthYear, dates]) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"border rounded-md overflow-hidden\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-gray-50 px-4 py-3 border-b\",\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"font-medium text-primary\",\n              children: monthYear\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"divide-y divide-gray-200\",\n            children: dates.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"px-4 py-3 flex items-center justify-between hover:bg-gray-50\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"font-medium\",\n                  children: formatDate(item.date)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 234,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-sm text-gray-600\",\n                  children: item.reason\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 235,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 233,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleRemoveDate(item._id),\n                className: \"text-gray-400 hover:text-red-500\",\n                title: \"Remove date\",\n                children: /*#__PURE__*/_jsxDEV(FaTimes, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 242,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 23\n              }, this)]\n            }, item._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 17\n          }, this)]\n        }, monthYear, true, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-6 bg-yellow-50 p-3 rounded-md border border-yellow-100\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-start space-x-3\",\n          children: [/*#__PURE__*/_jsxDEV(FaExclamationCircle, {\n            className: \"text-yellow-500 mt-0.5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"text-sm font-medium text-yellow-800\",\n              children: \"Important Note:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-sm text-yellow-700 mt-1\",\n              children: \"Patients won't be able to book appointments on dates marked as unavailable. Existing appointments on these dates will need to be rescheduled.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 137,\n    columnNumber: 5\n  }, this);\n};\n_s(AvailabilityCalendar, \"p4YgvyiZSkYJ5AQ9dXhL6lERKQQ=\");\n_c = AvailabilityCalendar;\nexport default AvailabilityCalendar;\nvar _c;\n$RefreshReg$(_c, \"AvailabilityCalendar\");","map":{"version":3,"names":["React","useState","useEffect","fetchDoctorUnavailableDates","addUnavailableDate","removeUnavailableDate","formatDate","isDateInPast","getFormattedDate","LoadingSpinner","AlertMessage","FaCalendarAlt","FaPlus","FaTimes","FaExclamationCircle","jsxDEV","_jsxDEV","AvailabilityCalendar","_s","unavailableDates","setUnavailableDates","loading","setLoading","error","setError","isAddingDate","setIsAddingDate","newDate","setNewDate","newReason","setNewReason","actionSuccess","setActionSuccess","actionMessage","setActionMessage","loadUnavailableDates","data","err","console","_id","date","reason","handleAddDate","e","preventDefault","some","item","dateId","length","newDateEntry","setTimeout","handleRemoveDate","filter","groupDatesByMonth","grouped","sort","a","b","Date","forEach","monthYear","toLocaleString","month","year","push","groupedDates","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","message","onClick","size","onSubmit","htmlFor","id","value","min","onChange","target","required","placeholder","disabled","Object","entries","map","dates","title","_c","$RefreshReg$"],"sources":["/workspaces/DoctorDashboard/client/src/components/doctor/AvailabilityCalendar.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { fetchDoctorUnavailableDates, addUnavailableDate, removeUnavailableDate } from '../../utils/api';\nimport { formatDate, isDateInPast, getFormattedDate } from '../../utils/dateUtils';\nimport LoadingSpinner from '../common/LoadingSpinner';\nimport AlertMessage from '../common/AlertMessage';\nimport { FaCalendarAlt, FaPlus, FaTimes, FaExclamationCircle } from 'react-icons/fa';\n\nconst AvailabilityCalendar = () => {\n  const [unavailableDates, setUnavailableDates] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [isAddingDate, setIsAddingDate] = useState(false);\n  const [newDate, setNewDate] = useState(getFormattedDate());\n  const [newReason, setNewReason] = useState('');\n  const [actionSuccess, setActionSuccess] = useState(false);\n  const [actionMessage, setActionMessage] = useState('');\n\n  useEffect(() => {\n    const loadUnavailableDates = async () => {\n      try {\n        setLoading(true);\n        const data = await fetchDoctorUnavailableDates();\n        setUnavailableDates(data);\n        setError(null);\n      } catch (err) {\n        console.error('Error fetching unavailable dates:', err);\n        setError('Failed to load unavailable dates. Please try again later.');\n        \n        // For demo purposes, set mock data if API fails\n        setUnavailableDates([\n          { _id: 'date1', date: '2025-05-15', reason: 'Personal leave' },\n          { _id: 'date2', date: '2025-06-10', reason: 'Conference attendance' },\n          { _id: 'date3', date: '2025-06-11', reason: 'Conference attendance' },\n          { _id: 'date4', date: '2025-07-01', reason: 'Vacation' },\n          { _id: 'date5', date: '2025-07-02', reason: 'Vacation' },\n          { _id: 'date6', date: '2025-07-03', reason: 'Vacation' }\n        ]);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    loadUnavailableDates();\n  }, []);\n\n  const handleAddDate = async (e) => {\n    e.preventDefault();\n    \n    // Validate date is not in the past\n    if (isDateInPast(newDate)) {\n      setError('Cannot add unavailable dates in the past.');\n      return;\n    }\n\n    // Check if date already exists\n    if (unavailableDates.some(item => item.date === newDate)) {\n      setError('This date is already marked as unavailable.');\n      return;\n    }\n\n    try {\n      setLoading(true);\n      // This would typically make an API call to add an unavailable date\n      // For demo purposes, we'll just update the local state\n      const dateId = 'date' + (unavailableDates.length + 1);\n      const newDateEntry = { _id: dateId, date: newDate, reason: newReason };\n      \n      setUnavailableDates([...unavailableDates, newDateEntry]);\n      setNewDate(getFormattedDate());\n      setNewReason('');\n      setIsAddingDate(false);\n      setError(null);\n      \n      // Show success message\n      setActionSuccess(true);\n      setActionMessage('Date marked as unavailable successfully!');\n      \n      // Reset success message after 3 seconds\n      setTimeout(() => {\n        setActionSuccess(false);\n        setActionMessage('');\n      }, 3000);\n    } catch (err) {\n      console.error('Error adding unavailable date:', err);\n      setError('Failed to add unavailable date. Please try again later.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleRemoveDate = async (dateId) => {\n    try {\n      setLoading(true);\n      // This would typically make an API call to remove an unavailable date\n      // For demo purposes, we'll just update the local state\n      setUnavailableDates(unavailableDates.filter(item => item._id !== dateId));\n      setError(null);\n      \n      // Show success message\n      setActionSuccess(true);\n      setActionMessage('Date removed successfully!');\n      \n      // Reset success message after 3 seconds\n      setTimeout(() => {\n        setActionSuccess(false);\n        setActionMessage('');\n      }, 3000);\n    } catch (err) {\n      console.error('Error removing unavailable date:', err);\n      setError('Failed to remove unavailable date. Please try again later.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Group dates by month for better organization\n  const groupDatesByMonth = () => {\n    const grouped = {};\n    \n    [...unavailableDates].sort((a, b) => new Date(a.date) - new Date(b.date)).forEach(item => {\n      const date = new Date(item.date);\n      const monthYear = date.toLocaleString('en-US', { month: 'long', year: 'numeric' });\n      \n      if (!grouped[monthYear]) {\n        grouped[monthYear] = [];\n      }\n      \n      grouped[monthYear].push(item);\n    });\n    \n    return grouped;\n  };\n\n  const groupedDates = groupDatesByMonth();\n\n  return (\n    <div className=\"bg-white rounded-md shadow-sm\">\n      <div className=\"p-4 border-b border-gray-200\">\n        <h2 className=\"text-xl font-semibold text-primary\">Availability Calendar</h2>\n        <p className=\"text-sm text-gray-500 mt-1\">Manage your unavailable dates</p>\n      </div>\n      \n      {error && <AlertMessage type=\"error\" message={error} />}\n      {actionSuccess && <AlertMessage type=\"success\" message={actionMessage} />}\n\n      <div className=\"p-4\">\n        <div className=\"flex justify-between items-center mb-6\">\n          <p className=\"text-sm text-gray-600\">\n            Mark dates when you are unavailable to accept appointments.\n          </p>\n          \n          {!isAddingDate ? (\n            <button\n              onClick={() => setIsAddingDate(true)}\n              className=\"flex items-center space-x-1 px-4 py-2 bg-primary text-white rounded-md hover:bg-opacity-90\"\n            >\n              <FaPlus size={12} />\n              <span>Add Date</span>\n            </button>\n          ) : (\n            <button\n              onClick={() => setIsAddingDate(false)}\n              className=\"text-gray-600 hover:text-gray-800\"\n            >\n              Cancel\n            </button>\n          )}\n        </div>\n        \n        {isAddingDate && (\n          <div className=\"mb-6 p-4 bg-gray-50 rounded-md\">\n            <h3 className=\"text-md font-medium text-gray-700 mb-3\">Add Unavailable Date</h3>\n            <form onSubmit={handleAddDate}>\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 mb-4\">\n                <div className=\"space-y-2\">\n                  <label htmlFor=\"newDate\" className=\"block text-sm font-medium text-gray-700\">Date</label>\n                  <input\n                    type=\"date\"\n                    id=\"newDate\"\n                    value={newDate}\n                    min={getFormattedDate()}\n                    onChange={(e) => setNewDate(e.target.value)}\n                    className=\"w-full p-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-primary\"\n                    required\n                  />\n                </div>\n                \n                <div className=\"space-y-2\">\n                  <label htmlFor=\"newReason\" className=\"block text-sm font-medium text-gray-700\">Reason</label>\n                  <input\n                    type=\"text\"\n                    id=\"newReason\"\n                    value={newReason}\n                    onChange={(e) => setNewReason(e.target.value)}\n                    placeholder=\"e.g. Vacation, Conference, etc.\"\n                    className=\"w-full p-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-primary\"\n                    required\n                  />\n                </div>\n              </div>\n              \n              <div className=\"flex justify-end\">\n                <button\n                  type=\"submit\"\n                  className=\"px-4 py-2 bg-primary text-white rounded-md hover:bg-opacity-90\"\n                  disabled={loading}\n                >\n                  Add Date\n                </button>\n              </div>\n            </form>\n          </div>\n        )}\n        \n        {loading && unavailableDates.length === 0 ? (\n          <LoadingSpinner />\n        ) : unavailableDates.length === 0 ? (\n          <div className=\"text-center py-10\">\n            <FaCalendarAlt className=\"mx-auto text-gray-300 text-5xl mb-4\" />\n            <p className=\"text-gray-500\">You haven't marked any unavailable dates yet.</p>\n            <p className=\"text-gray-500\">Click the \"Add Date\" button to get started.</p>\n          </div>\n        ) : (\n          <div className=\"space-y-6\">\n            {Object.entries(groupedDates).map(([monthYear, dates]) => (\n              <div key={monthYear} className=\"border rounded-md overflow-hidden\">\n                <div className=\"bg-gray-50 px-4 py-3 border-b\">\n                  <h3 className=\"font-medium text-primary\">{monthYear}</h3>\n                </div>\n                <ul className=\"divide-y divide-gray-200\">\n                  {dates.map((item) => (\n                    <li key={item._id} className=\"px-4 py-3 flex items-center justify-between hover:bg-gray-50\">\n                      <div>\n                        <p className=\"font-medium\">{formatDate(item.date)}</p>\n                        <p className=\"text-sm text-gray-600\">{item.reason}</p>\n                      </div>\n                      <button\n                        onClick={() => handleRemoveDate(item._id)}\n                        className=\"text-gray-400 hover:text-red-500\"\n                        title=\"Remove date\"\n                      >\n                        <FaTimes />\n                      </button>\n                    </li>\n                  ))}\n                </ul>\n              </div>\n            ))}\n          </div>\n        )}\n        \n        <div className=\"mt-6 bg-yellow-50 p-3 rounded-md border border-yellow-100\">\n          <div className=\"flex items-start space-x-3\">\n            <FaExclamationCircle className=\"text-yellow-500 mt-0.5\" />\n            <div>\n              <h4 className=\"text-sm font-medium text-yellow-800\">Important Note:</h4>\n              <p className=\"text-sm text-yellow-700 mt-1\">\n                Patients won't be able to book appointments on dates marked as unavailable.\n                Existing appointments on these dates will need to be rescheduled.\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AvailabilityCalendar;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}